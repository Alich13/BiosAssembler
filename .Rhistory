bm = bodymap.eset
edata = exprs(bm)
index
bm = bodymap.eset
edata = exprs(bm)
index
bm = bodymap.eset
edata = exprs(bm)
row_sums = rowSums(edata)
edata = edata[order(row_sums),]
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA,Colv=NA)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA,Colv=NA)
bm = bodymap.eset
edata = exprs(bm)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA)
bm = bodymap.eset
edata = exprs(bm)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA)
bm = bodymap.eset
edata = exprs(bm)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA,Colv=NA)
bm = bodymap.eset
edata = exprs(bm)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA,Colv=NA)
bm = bodymap.eset
edata = exprs(bm)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA)
bm = bodymap.eset
edata = exprs(bm)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA ,Colv = NA)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA,Colv=NA)
bm = bodymap.eset
edata = exprs(bm)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA )
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA)
bm = bodymap.eset
edata = exprs(bm)
row_sums = rowSums(edata)
edata = edata[order(row_sums),]
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA,Colv=NA
)
bm = bodymap.eset
edata = exprs(bm)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA,Colv=NA)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA )
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA,Colv=NA)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA,Colv=NA)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA,Colv=NA)
row_sums = rowSums(edata)
index = which(rank(-row_sums) < 500 )
heatmap(edata[index,],Rowv=NA)
con =url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/montpick_eset.RData")
load(file=con)
close(con)
mp = montpick.eset
pdata=pData(mp)
edata=as.data.frame(exprs(mp))
fdata = fData(mp)
edata=log2(edata+1)
edata
hc <- hclust(dist(t(mp)))
cutree(hc, k = 2) #k = 1 is trivial
hc <- hclust(dist(t(edata)))
cutree(hc, k = 2) #k = 1 is
class(cutree(hc, k = 2)) #k = 1 is trivial
cutr=cutree(hc, k = 2)
table (cutr)
---------------------------------------
k1=kmeans(edata ,centers = 2)
---------------------------------------
k1=kmeans(edata ,centers = 2)
k1=kmeans(edata ,centers = 2)
table (k1$cluster)
122/7
47061/5519
matplot(t(k1$centers),col=1:3,type="l",lwd=3)
k1$centers
matplot(t(k1$centers),col=1:2,type="l",lwd=2)
set.seed(1235)
k1=kmeans(edata ,centers = 2)
matplot(t(k1$centers),col=1:2,type="l",lwd=2)
k1$centers
k1$cluster
shiny::runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
cars
data()
woman
women
airmiles
airquality
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
input$select
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
head(iris)
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
?switch
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp()
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
geneData
library(Biobase)
geneData
ChickWeight
DNase
AirPassengers
co2
Nile
Titanic
class(Titanic)
class(islands)
quakes
sleep
iris
names(iris)
class(names(iris)
)
list(class(names(iris)))
shiny::runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
list(class(names(iris)))
list("ali","azm","vnkzvn")
list(names(iris))
as.list(names(iris))
list("ali","azm","vnkzvn")
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
?tableOutput
?h3
?sidebarLayout
? sidebarPanel
?sidebarPanel
install.packages("shinythemes")
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
?read.table
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
write.csv(iris, file = 'iris.csv')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
write.csv(iris[,2:], file = 'iris.csv')
iris[,2:]
iris[,2]
iris[,2:4]
write.csv(iris[,2:5], file = 'iris.csv')
runApp('C:/Users/chemk/Desktop/shiny_clustering project/project_week_4')
setwd("C:/Users/chemk/Desktop/shiny_clustering project")
runApp('project_week_4')
runApp()
runApp('project_week_4')
runApp('project_week_4')
runApp()
runApp('project_week_4')
setwd("C:/Users/chemk/Desktop/shiny_clustering project/project_week_4")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
iris[,2:5]
iris
write.csv(iris, file = 'iris.csv')
runApp()
starwars
df1=read.csv("C:\Users\chemk\Desktop\iris.csv")
df1=read.csv("C\Users\chemk\Desktop\iris.csv")
df1=read.csv("Users\chemk\Desktop\iris.csv")
df1=read.csv("C\\Users\\chemk\\Desktop\\iris.csv")
df1=read.csv("C\\Users\\chemk\\Desktop\\iris.csv" ,header = TRUE)
df1=read.csv("C:\\Users\\chemk\\Desktop\\iris.csv")
df1
df1[,3:7]
df1[,3:6]
df1[,2:6]
df1=df1[,2:6]
df1
plot(df1)
runApp()
runApp()
df1
df
df1
df1
type(df1)
summary(df1)
View(df1)
str(df1)
runApp()
df1
as.character(df1$Species)
df1
df1$Species=as.character(df1$Species)
df1
str(df1
)
plot(df1)
as.numeric(df1)
df1[, sapply(df, class) != "factor"]
df1[, sapply(df1, class) != "factor"]
df1[, sapply(df1, class) != "chr"]
str(df1)
df1[, sapply(df1, class) != "chr"]
sapply(df1, class)
df1[, sapply(df1, class) != "character"]
runApp()
df1
sapply(df1 ,min)
sapply(df1$Sepal.Width ,min)
df1
apply(df1,2,as.character)
class(apply(df1,2,as.character))
as.data.frame(apply(df1,2,as.character))
df1=read.csv("C:\\Users\\chemk\\Desktop\\iris.csv")
df1
head(df1)
df1=read.csv("C:\\Users\\chemk\\Desktop\\iris.csv")
df1
head(df1)
?read.table
read.table(file="C:\\Users\\chemk\\Desktop\\iris.csv", sep=";")
read.table(file="C:\\Users\\chemk\\Desktop\\iris.csv", sep=";" ,header = TRUE)
df1=read.table(file="C:\\Users\\chemk\\Desktop\\iris.csv", sep=";" ,header = TRUE)
str(df1)
df1$SpeciEQFEes=as.character(df1$SpeciEQFEes)
str(df1)
df1
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=df1[, sapply(dataset, class) !=c( "character","factor")]
dataset_num= as.data.frame( apply(df1,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset)
return(scaled_data)
}
write.csv("df1")
write.csv(x=df1, file="mydf1")
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=df1[, sapply(dataset, class) !=c( "character","factor")]
dataset_num= as.data.frame( apply(df1,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset)
return(scaled_data)
}
a=factor("Species")
a
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=df1[, sapply(dataset, class) !=c( "character","factor")]
dataset_num= as.data.frame( apply(df1,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset)
return(scaled_data)
}
process_data(df1 , a)
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=df1[, sapply(dataset, class) != "character" || sapply(dataset, class) != "factor"]
dataset_num= as.data.frame( apply(df1,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset)
return(scaled_data)
}
process_data(df1 , a)
df1[!is.na, ]
df1
tail(df1)
na.omit(df1)
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=df1[, sapply(dataset, class) != "character" || sapply(dataset, class) != "factor"]
dataset=na.omit(dataset)
dataset_num= as.data.frame( apply(dataset,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset_num)
return(scaled_data)
}
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=df1[, sapply(dataset, class) != "character" || sapply(dataset, class) != "factor"]
dataset=na.omit(dataset)
dataset_num= as.data.frame( apply(dataset,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset_num)
return(scaled_data)
}
process_data(df1 , a)
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=dataset[, sapply(dataset, class) != "character" || sapply(dataset, class) != "factor"]
dataset=na.omit(dataset)
dataset_num= as.data.frame( apply(dataset,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset_num)
return(scaled_data)
}
process_data(df1 , a)
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=dataset[,  sapply(dataset, class) != "factor"]
dataset=na.omit(dataset)
dataset_num= as.data.frame( apply(dataset,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset_num)
return(scaled_data)
}
process_data(df1 , a)
str(df1)
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=dataset[,  ((sapply(dataset, class) != "factor")||( sapply(dataset, class) != "character"))]
dataset=na.omit(dataset)
dataset_num= as.data.frame( apply(dataset,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset_num)
return(scaled_data)
}
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=dataset[,  ((sapply(dataset, class) != "factor")||( sapply(dataset, class) != "character"))]
dataset=na.omit(dataset)
dataset_num= as.data.frame( apply(dataset,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset_num)
return(scaled_data)
}
process_data(df1 , a)
1==1 ||1==1
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=dataset[,sapply(dataset, class) != "character"]
dataset=dataset[,sapply(dataset, class) != "factor"]
dataset_na=na.omit(dataset)
dataset_num= as.data.frame( apply(dataset,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset_num)
return(scaled_data)
}
process_data(df1 , a)
process_data <- function(dataset, labl, ...) {
label_col=dataset$label   #input$select2
dataset=dataset[,sapply(dataset, class) != "character"]
dataset=dataset[,sapply(dataset, class) != "factor"]
dataset_na=na.omit(dataset)
dataset_num= as.data.frame( apply(dataset_na,2,as.numeric))#asnumeric  kol
scaled_data=scale(dataset_num)
return(scaled_data)
}
process_data(df1 , a)
runApp()
runApp()
runApp()
runApp()
runApp()
?
updateTabsetPanel
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fit =kmeans(iris,3)
fit = kmeans(iris,3)
fit <- kmeans(iris,3)
fit <- kmeans(iris[,1:4],3)
fit <- kmeans(iris[,1:4],3)
iris[,1:4]
plot(iris)
plot(iris ,col =fit$cluster)
fit$cluster
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mean(iris)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
plot(iris)
df1
plot(iris[1:5])
plot(iris[1:5])
plot(iris[1:3])
pairs(iris)
runApp()
getOption("width")
getOption("width")=200
class(getOption("width")=200)
class(getOption("width"))
runApp()
options(width = 400)
runApp()
getOption("width")
options(width = 200)
runApp()
k=kmeans(iris,3)
k=kmeans(iris[,1:4],3)
k
summary(k)
k$size
names(k)
comment(k)
class(k)
slot(k)
slotNames(k)
k
k$betweenss/k$totss
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
iris
iris[1:4]
plot(iris[1:4])
runApp()
runApp()
runApp()
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='ali13',
token='9B522452F42472C5D26874A8F4371366',
secret='<SECRET>')
rsconnect::setAccountInfo(name='ali13', token='9B522452F42472C5D26874A8F4371366', secret='SKoWdGPS+M9yqZ/+CsiUY9utotDPBbE2jLVnz+9G')
rsconnect::deployApp('C:\Users\chemk\Desktop\shiny_clustering project\project_week_4')
rsconnect::deployApp('C:\\Users\\chemk\\Desktop\\shiny_clustering project\\project_week_4')
shiny::runApp()
rsconnect::deployApp('C:\\Users\\chemk\\Desktop\\shiny_clustering project\\project_week_4')
